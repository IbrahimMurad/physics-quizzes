# Generated by Django 5.2 on 2025-06-24 07:16

from django.db import migrations, transaction
from django.utils.text import slugify


def migrate_to_scope(apps, schema_editor):
    with transaction.atomic():
        Scope = apps.get_model("scope", "Scope")
        TextBook = apps.get_model("scope", "TextBook")
        Unit = apps.get_model("scope", "Unit")
        Chapter = apps.get_model("scope", "Chapter")
        Lesson = apps.get_model("scope", "Lesson")

        textbook_map = {}
        unit_map = {}
        chapter_map = {}

        for textbook in TextBook.objects.all():
            scope = Scope(
                title=textbook.title,
                caption=textbook.caption,
                cover=textbook.cover,
                level=0,
                slug=slugify(f"Textbook {textbook.title}"),
                in_scope_order=0,
                parent=None,
            )
            scope.save()
            print("-----------------------")
            print(f"Textbook: {scope.__dict__}")
            print("-----------------------\n")
            textbook_map[textbook.pk] = scope

        for unit in Unit.objects.all():
            parent = textbook_map[unit.textbook_id]
            scope = Scope(
                title=unit.title,
                caption=unit.caption,
                cover=unit.cover,
                level=1,
                slug=slugify(f"Unit {unit.title}"),
                in_scope_order=unit.in_scope_order,
                parent=parent,
            )
            scope.save()
            print("-----------------------")
            print(f"Unit: {scope.__dict__}")
            print("-----------------------\n")
            unit_map[unit.pk] = scope

        for chapter in Chapter.objects.all():
            parent = unit_map[chapter.unit_id]
            scope = Scope(
                title=chapter.title,
                caption=chapter.caption,
                cover=chapter.cover,
                level=2,
                slug=slugify(f"Chapter {chapter.title}"),
                in_scope_order=chapter.in_scope_order,
                parent=parent,
            )
            scope.save()
            print("-----------------------")
            print(f"Chapter: {scope.__dict__}")
            print("-----------------------\n")
            chapter_map[chapter.pk] = scope

        for lesson in Lesson.objects.all():
            parent = chapter_map[lesson.chapter_id]
            scope = Scope(
                title=lesson.title,
                caption=lesson.caption,
                cover=lesson.cover,
                level=3,
                slug=slugify(f"Lesson {lesson.title}"),
                in_scope_order=lesson.in_scope_order,
                parent=parent,
            )
            scope.save()
            print("-----------------------")
            print(f"Lesson: {scope.__dict__}")
            print("-----------------------\n")


class Migration(migrations.Migration):
    dependencies = [
        ("scope", "0007_scope"),
    ]

    operations = [migrations.RunPython(migrate_to_scope)]
